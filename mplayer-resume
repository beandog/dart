#!/usr/bin/env php
<?

	// By default, save files in ~/.mplayer/playback/
	$home = getenv('HOME');
	$save_files_to = "$home/.mplayer/playback/";

	/**
	 *
	 * @author Steve Dibb <steve dot dibb at gmail dot com>
	 * @copyright public-domain
	 * @date 2006-09-15
	 * @version 1.3
	 * @homepage http://wonkabar.org/bend/
	 * 
	 * Run time dependencies: PHP >= 4.3.0 with CLI and PCRE
	 *
	 * See README for documentation on usage
	 *
	 */

	// Check to see the directory exists.  If not, try and create it.
	if(!is_dir($save_files_to)) {
		if(!mkdir($save_files_to)) {
			fwrite(STDOUT, "Please make sure the directory $save_files_to exists and is both readable and writable by this user\n");
			die;
		}
	}

	// Make sure I can save playback files
	if(!is_writable($save_files_to) || !is_readable($save_files_to)) {
		fwrite(STDOUT, "I can't read from and/or write to $save_files_to\n");
		die;
	}

	// If they didn't pass any arguments, exit .. stage left
	if($argc === 1)
		die;
	
	// Correct *some* human error ;)
	if(substr($save_files_to, -1, 1) != '/')
		$save_files_to .= '/';

	// grep the filename to play
	// add more extensions if you like :)
	$movie = end(preg_grep('/\.(mk[av]|vob|mpeg|mp[34gc]|og[gm]|avi|wav|midi?|wm[av]|mov|asf|yuv|ram?|aac|nuv|m4[av]|flac|au|m2v|mp4v|qt|rm(vb)?|flv)$/i', $argv));

	// If we can't get the movie name, just quit
	if(empty($movie)) {
		fwrite(STDERR, "mplayer-resume: No filename to playback.\n");
		die;
	}

	// Drop the binary command
	unset($argv[0]);
	
	// Put the arguments back together again
	$str_args = implode(' ', $argv);

	// Keep the movie filename separate from args
	$str_args = str_replace($movie, '', $str_args);
	
	// Where the seek position will be saved
	$txt = $save_files_to.basename($movie).".txt";

	// If there is already a playback file, read it and start
	// from that position.
	if(file_exists($txt)) {
		$ss = trim(file_get_contents($txt));
		// One more check for garbage
		if(is_numeric($ss) && $ss > 0)
			$flags = " -ss $ss ";
	}

	// Add quotes around the movie filename if it has spaces in it
	if(strpos($movie, ' ') !== false) {
		$file = "\"$movie\"";
	} else {
		$file =& $movie;
	}
	
	// Build the execution string
	$exec = escapeshellcmd("mplayer $flags $str_args -quiet $file");
	
	// Execute the command, save output to an array
	exec($exec, $arr);

	// If the file didn't even exist, mplayer will die, and so will me
	if(!file_exists($movie)) {
		fwrite(STDERR, "mplayer-resume: Couldn't find the filename $movie\n");
		die;
	}
	
	// grep out the output we want
	$arr = preg_grep('/^ANS_TIME_POSITION|ANS_stream_position\b/', $arr);

	// the endpos when quitting
	$tmp = explode('=', $arr);
	$endpos = end($tmp);

	// If it's a negative value, that means you've seeked
	// past/to the end of the file, so just remove the old one.
	if($endpos < 1 && file_exists($txt))
		unlink($txt);
	// Save the (positive) playback position to the file
	else {
		// Generic error message, fix your stupid permissions
		$error_msg = "Cannot save file, please check write permissions for this user in $save_files_to";

		// Use PHP 5's fancy new functions, if possible. :)
		if(function_exists('file_put_contents'))
			file_put_contents($txt, $endpos) or die($error_msg);
		// Otherwise fallback on PHP 4's functions
		else {
			fwrite(fopen($txt, 'w'), $endpos) or die($error_msg);
		}	
	}
?>
