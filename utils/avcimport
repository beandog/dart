#!/bin/bash

p_x264=`basename $0`

for video in $*; do
	test -s "$video" || continue
	if [[ "${video: -3}" != "mkv" ]] && [[ "${video: -3}" != "mp4" ]]; then continue; fi
	mediainfo=$(mediainfo "$video" 2> /dev/null | egrep '^(Encoding|Duration|Bit|Encoded|Height|Frame|Format)')
	format=$(echo "$mediainfo" | egrep '(AVC|HEVC)' | head -n 1 | awk '{ print $3 }')
	if [[ "$format" != "AVC" ]] && [[ "$format" != "HEVC" ]]; then continue; fi
	crf=$(echo "$mediainfo" | grep "^Encoding settings" | cut -d ':' -f 2- | tr '/' '\n' | cut -d ' ' -f 2- | grep ^crf= | cut -d '=' -f 2 | cut -d '.' -f 1)
	duration=$(echo "$mediainfo" | grep "^Duration" | head -n 1 | cut -d ':' -f 2-)
	video_bitrate=$(echo "$mediainfo" | grep "^Bit rate" | head -n 1 | cut -d ':' -f 2-)
	encode_date=$(echo "$mediainfo" | grep "^Encoded date" | awk '{ print $5}')
	bytes=$(stat -c %s "$video")
	mbs=$(expr $bytes / 1048576)
	src="$video"
	video=`basename "$video"`
	progressive=0
	fps=0
	display=

	get_height=0
	height=`echo "$mediainfo" | grep "^Height" | awk '{print $3}'`
	if [[ "$height" -le 480 ]]; then
		height=480
		get_height=1
	elif [[ "$height" -le 576 ]]; then
		height=576
		get_height=1
	elif [[ "$height" -le 720 ]]; then
		height=720
		get_height=1
	elif [[ "$height" -le 1080 ]]; then
		height=1080
		get_height=1
	elif [[ "$height" -le 2160 ]]; then
		height=2160
		get_height=1
	fi
	display=
	if [[ "$get_height" == 1 ]] && [[ "$progressive" == 1 ]] && [[ "$fps" -ge 24 ]]; then
		display="${height}p${fps}"
	fi

	frame_rate_mode=`echo "$mediainfo" | egrep "^Frame rate mode" | head -n 1 | awk '{print $5}'`
	if [[ "$frame_rate_mode" == "Constant" ]]; then
		progressive=1
	fi
	if [[ "$progressive" -eq 1 ]]; then
		fps=`echo "$mediainfo" | egrep "^Frame rate\s{2}+" | head -n 1 | awk '{print $4}'`

		if [[ "$fps" == "24.000" ]]; then fps=24;
		elif [[ "$fps" == "25.000" ]]; then fps=25;
		elif [[ "$fps" == "30.000" ]]; then fps=30;
		elif [[ "$fps" == "60.000" ]]; then fps=60;
		else fps=""
		fi
	fi
	if [[ "$get_height" == 1 ]] && [[ "$progressive" == 1 ]] && [[ "$fps" -ge 24 ]]; then
		display="${height}p${fps}"
	fi

	preset=
	if [[ "$format" == "AVC" ]]; then
		subme=$(echo "$mediainfo" | grep "^Encoding settings" | cut -d ':' -f 2- | tr '/' '\n' | cut -d ' ' -f 2- | grep ^subme= | cut -d '=' -f 2)
		if [[ "$subme" -eq 0 ]]; then
			preset=ultrafast
		elif [[ "$subme" -eq 1 ]]; then
			preset=superfast
		elif [[ "$subme" -eq 2 ]]; then
			preset=veryfast
		elif [[ "$subme" -eq 4 ]]; then
			preset=faster
		elif [[ "$subme" -eq 6 ]]; then
			preset=fast
		elif [[ "$subme" -eq 7 ]]; then
			preset=medium
		elif [[ "$subme" -eq 8 ]]; then
			preset=slow
		elif [[ "$subme" -eq 9 ]]; then
			preset=veryslow
		elif [[ "$subme" -eq 11 ]]; then
			preset=placebo
		fi
	elif [[ "$format" == "HEVC" ]]; then
		min_cu_size=$(echo "$mediainfo" | grep "^Encoding settings" | cut -d ':' -f 2- | tr '/' '\n' | cut -d ' ' -f 2- | grep ^min-cu-size= | cut -d '=' -f 2)
		subme=$(echo "$mediainfo" | grep "^Encoding settings" | cut -d ':' -f 2- | tr '/' '\n' | cut -d ' ' -f 2- | grep ^subme= | cut -d '=' -f 2)
		ref=$(echo "$mediainfo" | grep "^Encoding settings" | cut -d ':' -f 2- | tr '/' '\n' | cut -d ' ' -f 2- | grep ^ref= | cut -d '=' -f 2)
		max_merge=$(echo "$mediainfo" | grep "^Encoding settings" | cut -d ':' -f 2- | tr '/' '\n' | cut -d ' ' -f 2- | grep ^max-merge= | cut -d '=' -f 2)
		b_adapt=$(echo "$mediainfo" | grep "^Encoding settings" | cut -d ':' -f 2- | tr '/' '\n' | cut -d ' ' -f 2- | grep ^b-adapt= | cut -d '=' -f 2)
		qp=$(echo "$mediainfo" | grep "^Encoding settings" | cut -d ':' -f 2- | tr '/' '\n' | cut -d ' ' -f 2- | grep ^qp= | cut -d '=' -f 2)
		if [[ "$min_cu_size" -eq 16 ]]; then
			preset=ultrafast
		elif [[ "$ref" -eq 1 ]]; then
			preset=superfast
		elif [[ "$subme" -eq 1 ]]; then
			preset=veryfast
		elif [[ "$ref" -eq 2 ]]; then
			preset=faster
		elif [[ "$b_adapt" -eq 0 ]]; then
			preset=fast
		elif [[ "$subme" -eq 2 ]]; then
			preset=medium
		elif [[ "$ref" -eq 4 ]]; then
			preset=slow
		elif [[ "$max_merge" -eq 4 ]]; then
			preset=slower
		# slower and veryslow have subme of 4, but since this is later in the if statement, it will trigger first
		elif [[ "$subme" -eq 4 ]]; then
			preset=veryslow
		elif [[ "$subme" -eq 5 ]]; then
			preset=placebo
		fi
	fi

	avcinfo="$video "
	avcimport=""
	if [[ ! -z "$format" ]]; then avcinfo="${avcinfo}$format "; fi
	if [[ ! -z "$preset" ]]; then avcinfo="${avcinfo}$preset "; fi
	if [[ ! -z "$crf" ]]; then avcinfo="${avcinfo}$crf "; fi
	if [[ ! -z "$qp" ]] && [[ "$qp" -eq "0" ]]; then avcinfo="${avcinfo}lossless "; fi
	if [[ ! -z "$display" ]]; then avcinfo="${avcinfo}- $display "; fi
	avcimport="${avcinfo:27}"
	if [[ ! -z "$mbs" ]]; then avcinfo="${avcinfo}- $mbs MBs"; fi
	if [[ ! -z "$duration" ]]; then avcinfo="${avcinfo} -$duration"; fi
	echo $avcinfo

	pgrep -c -f "HandBrakeCLI.*$video" &> /dev/null && continue

	nsix="${video:17:5}"

	if [[ "$p_x264" == "avcimport" ]] && [[ ! -z "$nsix" ]] && [[ ! -z "$format" ]] && [[ ! -z "$preset" ]] && [[ ! -z "encode_date" ]] && [[ $mbs -gt 0 ]] && [[ $crf -ge 0 ]]; then
		episode_id=`/root/bin/episode_id "$src"`
		test -z "${episode_id}" && continue

		sql="UPDATE episodes SET avcinfo = TRIM('$avcimport') WHERE id = $episode_id;"
		psql -qc "$sql" -h dlna -U steve dvds 2> /dev/null

	fi

done
